import 'package:flutter/material.dart';

/// Pantalla de asesoramiento contextual con chatbot.
/// Responde preguntas comunes sobre diabetes y proporciona consejos.
/// Compatible con WCAG 2.2 AA para accesibilidad.
class AdvisorScreen extends StatefulWidget {
  const AdvisorScreen({super.key});

  @override
  State<AdvisorScreen> createState() => _AdvisorScreenState();
}

class _AdvisorScreenState extends State<AdvisorScreen> {
  final TextEditingController _messageController = TextEditingController();
  final ScrollController _scrollController = ScrollController();
  final List<ChatMessage> _messages = [];

  @override
  void initState() {
    super.initState();
    _addWelcomeMessage();
  }

  @override
  void dispose() {
    _messageController.dispose();
    _scrollController.dispose();
    super.dispose();
  }

  void _addWelcomeMessage() {
    _messages.add(ChatMessage(
      text: '¬°Hola! Soy tu asistente de diabetes. Puedo ayudarte con preguntas sobre:\n\n'
            '‚Ä¢ Control de glucosa\n'
            '‚Ä¢ Alimentaci√≥n saludable\n'
            '‚Ä¢ Medicamentos e insulina\n'
            '‚Ä¢ Actividad f√≠sica\n'
            '‚Ä¢ S√≠ntomas y complicaciones\n\n'
            '¬øEn qu√© puedo ayudarte hoy?',
      isUser: false,
      timestamp: DateTime.now(),
    ));
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Asistente de Diabetes'),
        actions: [
          IconButton(
            icon: const Icon(Icons.refresh),
            onPressed: _clearChat,
            tooltip: 'Nueva conversaci√≥n',
          ),
        ],
      ),
      body: Column(
        children: [
          Expanded(
            child: ListView.builder(
              controller: _scrollController,
              padding: const EdgeInsets.all(16.0),
              itemCount: _messages.length,
              itemBuilder: (context, index) {
                return _buildMessage(_messages[index]);
              },
            ),
          ),
          _buildInputArea(),
        ],
      ),
    );
  }

  Widget _buildMessage(ChatMessage message) {
    return Align(
      alignment: message.isUser ? Alignment.centerRight : Alignment.centerLeft,
      child: Container(
        margin: const EdgeInsets.symmetric(vertical: 4.0),
        padding: const EdgeInsets.all(12.0),
        constraints: BoxConstraints(
          maxWidth: MediaQuery.of(context).size.width * 0.8,
        ),
        decoration: BoxDecoration(
          color: message.isUser
              ? Theme.of(context).colorScheme.primary
              : Colors.grey.shade200,
          borderRadius: BorderRadius.circular(16.0),
        ),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              message.text,
              style: TextStyle(
                color: message.isUser ? Colors.white : Colors.black,
                fontSize: 16.0,
              ),
            ),
            const SizedBox(height: 4.0),
            Text(
              _formatTime(message.timestamp),
              style: TextStyle(
                color: message.isUser ? Colors.white70 : Colors.grey,
                fontSize: 12.0,
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildInputArea() {
    return Container(
      padding: const EdgeInsets.all(16.0),
      decoration: BoxDecoration(
        color: Theme.of(context).scaffoldBackgroundColor,
        border: Border(
          top: BorderSide(color: Colors.grey.shade300),
        ),
      ),
      child: Row(
        children: [
          Expanded(
            child: TextField(
              controller: _messageController,
              decoration: const InputDecoration(
                hintText: 'Escribe tu pregunta...',
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.all(Radius.circular(24.0)),
                ),
                contentPadding: EdgeInsets.symmetric(horizontal: 16.0, vertical: 12.0),
              ),
              maxLines: null,
              textInputAction: TextInputAction.send,
              onSubmitted: (_) => _sendMessage(),
            ),
          ),
          const SizedBox(width: 8.0),
          FloatingActionButton(
            onPressed: _sendMessage,
            child: const Icon(Icons.send),
            mini: true,
          ),
        ],
      ),
    );
  }

  void _sendMessage() {
    final text = _messageController.text.trim();
    if (text.isEmpty) return;

    setState(() {
      _messages.add(ChatMessage(
        text: text,
        isUser: true,
        timestamp: DateTime.now(),
      ));
    });

    _messageController.clear();

    // Simular respuesta del bot
    Future.delayed(const Duration(seconds: 1), () {
      final response = _getBotResponse(text.toLowerCase());
      setState(() {
        _messages.add(ChatMessage(
          text: response,
          isUser: false,
          timestamp: DateTime.now(),
        ));
      });
      _scrollToBottom();
    });

    _scrollToBottom();
  }

  void _clearChat() {
    setState(() {
      _messages.clear();
      _addWelcomeMessage();
    });
  }

  void _scrollToBottom() {
    WidgetsBinding.instance.addPostFrameCallback((_) {
      _scrollController.animateTo(
        _scrollController.position.maxScrollExtent,
        duration: const Duration(milliseconds: 300),
        curve: Curves.easeOut,
      );
    });
  }

  String _getBotResponse(String userMessage) {
    // Respuestas basadas en palabras clave
    if (userMessage.contains('glucosa') || userMessage.contains('az√∫car')) {
      if (userMessage.contains('alta') || userMessage.contains('elevada')) {
        return 'La glucosa alta (>140 mg/dL) puede deberse a:\n\n'
               '‚Ä¢ Exceso de carbohidratos en la comida\n'
               '‚Ä¢ Falta de ejercicio\n'
               '‚Ä¢ Estr√©s o enfermedad\n'
               '‚Ä¢ Dosis insuficiente de insulina/medicamentos\n\n'
               'Recomendaciones:\n'
               '‚Ä¢ Verifica tu dosis de insulina\n'
               '‚Ä¢ Reduce porciones de carbohidratos\n'
               '‚Ä¢ Camina 15-20 minutos\n'
               '‚Ä¢ Consulta a tu m√©dico si persiste';
      } else if (userMessage.contains('baja') || userMessage.contains('hipo')) {
        return 'La hipoglucemia (<70 mg/dL) requiere atenci√≥n inmediata:\n\n'
               'S√≠ntomas: temblor, sudoraci√≥n, confusi√≥n, mareos\n\n'
               'Tratamiento:\n'
               '‚Ä¢ Toma 15g de glucosa r√°pida (jugo, caramelos)\n'
               '‚Ä¢ Espera 15 minutos y verifica glucosa\n'
               '‚Ä¢ Si no mejora, repite\n'
               '‚Ä¢ Come un snack si es hora de comida\n\n'
               'Prevenci√≥n: ajusta dosis de insulina, come regularmente';
      } else {
        return 'La glucosa normal en ayunas es 70-100 mg/dL. Despu√©s de comidas, hasta 140 mg/dL es aceptable para la mayor√≠a.\n\n'
               'Factores que afectan la glucosa:\n'
               '‚Ä¢ Alimentaci√≥n\n'
               '‚Ä¢ Ejercicio\n'
               '‚Ä¢ Medicamentos\n'
               '‚Ä¢ Estr√©s\n'
               '‚Ä¢ Enfermedades\n\n'
               'Monitorea regularmente y registra patrones.';
      }
    }

    if (userMessage.contains('comida') || userMessage.contains('comer') || userMessage.contains('alimentaci√≥n')) {
      return 'Recomendaciones nutricionales para diabetes:\n\n'
             '‚úÖ Consume:\n'
             '‚Ä¢ Vegetales sin almid√≥n (br√≥coli, espinacas, pepinos)\n'
             '‚Ä¢ Prote√≠nas magras (pollo, pescado, tofu)\n'
             '‚Ä¢ Granos integrales (quinoa, avena)\n'
             '‚Ä¢ Frutas con bajo √≠ndice gluc√©mico (manzanas, peras)\n\n'
             '‚ö†Ô∏è Limita:\n'
             '‚Ä¢ Az√∫cares refinados y bebidas azucaradas\n'
             '‚Ä¢ Carbohidratos procesados (pan blanco, pastas)\n'
             '‚Ä¢ Alimentos fritos y grasas saturadas\n\n'
             'üí° Consejos: come cada 3-4 horas, controla porciones, combina carbohidratos con prote√≠nas.';
    }

    if (userMessage.contains('ejercicio') || userMessage.contains('actividad') || userMessage.contains('deporte')) {
      return 'El ejercicio es beneficioso para el control de diabetes:\n\n'
             '‚úÖ Recomendado:\n'
             '‚Ä¢ Caminar 30 minutos diarios\n'
             '‚Ä¢ Nataci√≥n o ciclismo\n'
             '‚Ä¢ Yoga o tai chi\n'
             '‚Ä¢ Levantamiento de pesas ligeras\n\n'
             '‚ö†Ô∏è Precauciones:\n'
             '‚Ä¢ Verifica glucosa antes y despu√©s\n'
             '‚Ä¢ Lleva glucosa r√°pida\n'
             '‚Ä¢ Consulta a tu m√©dico antes de empezar\n'
             '‚Ä¢ Ajusta medicamentos si es necesario\n\n'
             'Beneficios: mejora sensibilidad a insulina, controla peso, reduce estr√©s.';
    }

    if (userMessage.contains('insulina') || userMessage.contains('medicamento')) {
      return 'Informaci√≥n sobre medicamentos para diabetes:\n\n'
             'üíâ Tipos de insulina:\n'
             '‚Ä¢ R√°pida: act√∫a en 15 min, dura 3-4 horas\n'
             '‚Ä¢ Regular: act√∫a en 30 min, dura 6-8 horas\n'
             '‚Ä¢ Lenta: act√∫a en 1-2 horas, dura 20-24 horas\n\n'
             'üíä Otros medicamentos:\n'
             '‚Ä¢ Metformina: reduce producci√≥n de glucosa hep√°tica\n'
             '‚Ä¢ Sulfonilureas: estimulan producci√≥n de insulina\n'
             '‚Ä¢ Inhibidores DPP-4: aumentan insulina, reducen glucag√≥n\n\n'
             '‚ö†Ô∏è Importante: nunca cambies dosis sin consultar a tu m√©dico.';
    }

    if (userMessage.contains('s√≠ntoma') || userMessage.contains('complicaci√≥n')) {
      return 'S√≠ntomas y complicaciones de diabetes:\n\n'
             'üî¥ S√≠ntomas de diabetes no controlada:\n'
             '‚Ä¢ Sed excesiva y boca seca\n'
             '‚Ä¢ Orina frecuente\n'
             '‚Ä¢ Cansancio extremo\n'
             '‚Ä¢ Visi√≥n borrosa\n'
             '‚Ä¢ Heridas que no cicatrizan\n\n'
             '‚ö†Ô∏è Complicaciones a largo plazo:\n'
             '‚Ä¢ Problemas card√≠acos\n'
             '‚Ä¢ Da√±o renal\n'
             '‚Ä¢ Problemas de visi√≥n\n'
             '‚Ä¢ Da√±o nervioso\n'
             '‚Ä¢ Problemas en pies\n\n'
             'El control temprano previene la mayor√≠a de complicaciones.';
    }

    if (userMessage.contains('estr√©s') || userMessage.contains('ansiedad')) {
      return 'Manejo del estr√©s en diabetes:\n\n'
             'El estr√©s eleva la glucosa porque libera cortisol y adrenalina.\n\n'
             'üí° T√©cnicas recomendadas:\n'
             '‚Ä¢ Respiraci√≥n profunda: inhala 4 segundos, exhala 6\n'
             '‚Ä¢ Meditaci√≥n diaria (10-15 minutos)\n'
             '‚Ä¢ Ejercicio regular\n'
             '‚Ä¢ Sue√±o adecuado (7-8 horas)\n'
             '‚Ä¢ Apoyo social (habla con amigos/familia)\n\n'
             'Si el estr√©s es severo, considera terapia profesional.';
    }

    // Respuesta por defecto
    return 'Lo siento, no entend√≠ completamente tu pregunta. Soy un asistente b√°sico y puedo ayudarte con temas como:\n\n'
           '‚Ä¢ Control de glucosa\n'
           '‚Ä¢ Alimentaci√≥n saludable\n'
           '‚Ä¢ Medicamentos e insulina\n'
           '‚Ä¢ Actividad f√≠sica\n'
           '‚Ä¢ S√≠ntomas y complicaciones\n'
           '‚Ä¢ Manejo del estr√©s\n\n'
           '¬øPuedes reformular tu pregunta o elegir uno de estos temas?';
  }

  String _formatTime(DateTime timestamp) {
    return '${timestamp.hour.toString().padLeft(2, '0')}:${timestamp.minute.toString().padLeft(2, '0')}';
  }
}

/// Modelo para mensajes del chat.
class ChatMessage {
  final String text;
  final bool isUser;
  final DateTime timestamp;

  ChatMessage({
    required this.text,
    required this.isUser,
    required this.timestamp,
  });
}